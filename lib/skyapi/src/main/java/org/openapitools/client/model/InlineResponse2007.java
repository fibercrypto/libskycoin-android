/**
 * Skycoin REST API.
 * Skycoin is a next-generation cryptocurrency.
 *
 * OpenAPI spec version: 0.25.1
 * Contact: skycoin.doe@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.InlineResponse2007Data;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class InlineResponse2007 {
  
  @SerializedName("data")
  private InlineResponse2007Data data = null;
  @SerializedName("error")
  private Object error = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public InlineResponse2007Data getData() {
    return data;
  }
  public void setData(InlineResponse2007Data data) {
    this.data = data;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getError() {
    return error;
  }
  public void setError(Object error) {
    this.error = error;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2007 inlineResponse2007 = (InlineResponse2007) o;
    return (this.data == null ? inlineResponse2007.data == null : this.data.equals(inlineResponse2007.data)) &&
        (this.error == null ? inlineResponse2007.error == null : this.error.equals(inlineResponse2007.error));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.data == null ? 0: this.data.hashCode());
    result = 31 * result + (this.error == null ? 0: this.error.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2007 {\n");
    
    sb.append("  data: ").append(data).append("\n");
    sb.append("  error: ").append(error).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
