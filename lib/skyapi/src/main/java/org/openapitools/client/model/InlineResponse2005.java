/**
 * Skycoin REST API.
 * Skycoin is a next-generation cryptocurrency.
 *
 * OpenAPI spec version: 0.25.1
 * Contact: skycoin.doe@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.Apiv1walletsEntries;
import org.openapitools.client.model.Apiv1walletsMeta;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class InlineResponse2005 {
  
  @SerializedName("entries")
  private List<Apiv1walletsEntries> entries = null;
  @SerializedName("meta")
  private Apiv1walletsMeta meta = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Apiv1walletsEntries> getEntries() {
    return entries;
  }
  public void setEntries(List<Apiv1walletsEntries> entries) {
    this.entries = entries;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Apiv1walletsMeta getMeta() {
    return meta;
  }
  public void setMeta(Apiv1walletsMeta meta) {
    this.meta = meta;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2005 inlineResponse2005 = (InlineResponse2005) o;
    return (this.entries == null ? inlineResponse2005.entries == null : this.entries.equals(inlineResponse2005.entries)) &&
        (this.meta == null ? inlineResponse2005.meta == null : this.meta.equals(inlineResponse2005.meta));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entries == null ? 0: this.entries.hashCode());
    result = 31 * result + (this.meta == null ? 0: this.meta.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2005 {\n");
    
    sb.append("  entries: ").append(entries).append("\n");
    sb.append("  meta: ").append(meta).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
