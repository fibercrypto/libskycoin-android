/**
 * Skycoin REST API.
 * Skycoin is a next-generation cryptocurrency.
 *
 * OpenAPI spec version: 0.25.1
 * Contact: skycoin.doe@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import org.openapitools.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("Apiv1exploreraddressInputs".equalsIgnoreCase(className)) {
      return new TypeToken<List<Apiv1exploreraddressInputs>>(){}.getType();
    }
    
    if ("Apiv1exploreraddressOutputs".equalsIgnoreCase(className)) {
      return new TypeToken<List<Apiv1exploreraddressOutputs>>(){}.getType();
    }
    
    if ("Apiv1exploreraddressStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<Apiv1exploreraddressStatus>>(){}.getType();
    }
    
    if ("Apiv1pendingTxsTransaction".equalsIgnoreCase(className)) {
      return new TypeToken<List<Apiv1pendingTxsTransaction>>(){}.getType();
    }
    
    if ("Apiv1walletsEntries".equalsIgnoreCase(className)) {
      return new TypeToken<List<Apiv1walletsEntries>>(){}.getType();
    }
    
    if ("Apiv1walletsMeta".equalsIgnoreCase(className)) {
      return new TypeToken<List<Apiv1walletsMeta>>(){}.getType();
    }
    
    if ("Apiv1wallettransactionHoursSelection".equalsIgnoreCase(className)) {
      return new TypeToken<List<Apiv1wallettransactionHoursSelection>>(){}.getType();
    }
    
    if ("Apiv1wallettransactionTo".equalsIgnoreCase(className)) {
      return new TypeToken<List<Apiv1wallettransactionTo>>(){}.getType();
    }
    
    if ("Apiv1wallettransactionWallet".equalsIgnoreCase(className)) {
      return new TypeToken<List<Apiv1wallettransactionWallet>>(){}.getType();
    }
    
    if ("InlineObject".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineObject>>(){}.getType();
    }
    
    if ("InlineResponse200".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse200>>(){}.getType();
    }
    
    if ("InlineResponse2001".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2001>>(){}.getType();
    }
    
    if ("InlineResponse2002".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2002>>(){}.getType();
    }
    
    if ("InlineResponse2003".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2003>>(){}.getType();
    }
    
    if ("InlineResponse2003UnconfirmedVerifyTransaction".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2003UnconfirmedVerifyTransaction>>(){}.getType();
    }
    
    if ("InlineResponse2004".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2004>>(){}.getType();
    }
    
    if ("InlineResponse2005".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2005>>(){}.getType();
    }
    
    if ("InlineResponse2006".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2006>>(){}.getType();
    }
    
    if ("InlineResponse2007".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2007>>(){}.getType();
    }
    
    if ("InlineResponse2007Data".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2007Data>>(){}.getType();
    }
    
    if ("InlineResponseDefault".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponseDefault>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("Apiv1exploreraddressInputs".equalsIgnoreCase(className)) {
      return new TypeToken<Apiv1exploreraddressInputs>(){}.getType();
    }
    
    if ("Apiv1exploreraddressOutputs".equalsIgnoreCase(className)) {
      return new TypeToken<Apiv1exploreraddressOutputs>(){}.getType();
    }
    
    if ("Apiv1exploreraddressStatus".equalsIgnoreCase(className)) {
      return new TypeToken<Apiv1exploreraddressStatus>(){}.getType();
    }
    
    if ("Apiv1pendingTxsTransaction".equalsIgnoreCase(className)) {
      return new TypeToken<Apiv1pendingTxsTransaction>(){}.getType();
    }
    
    if ("Apiv1walletsEntries".equalsIgnoreCase(className)) {
      return new TypeToken<Apiv1walletsEntries>(){}.getType();
    }
    
    if ("Apiv1walletsMeta".equalsIgnoreCase(className)) {
      return new TypeToken<Apiv1walletsMeta>(){}.getType();
    }
    
    if ("Apiv1wallettransactionHoursSelection".equalsIgnoreCase(className)) {
      return new TypeToken<Apiv1wallettransactionHoursSelection>(){}.getType();
    }
    
    if ("Apiv1wallettransactionTo".equalsIgnoreCase(className)) {
      return new TypeToken<Apiv1wallettransactionTo>(){}.getType();
    }
    
    if ("Apiv1wallettransactionWallet".equalsIgnoreCase(className)) {
      return new TypeToken<Apiv1wallettransactionWallet>(){}.getType();
    }
    
    if ("InlineObject".equalsIgnoreCase(className)) {
      return new TypeToken<InlineObject>(){}.getType();
    }
    
    if ("InlineResponse200".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse200>(){}.getType();
    }
    
    if ("InlineResponse2001".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2001>(){}.getType();
    }
    
    if ("InlineResponse2002".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2002>(){}.getType();
    }
    
    if ("InlineResponse2003".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2003>(){}.getType();
    }
    
    if ("InlineResponse2003UnconfirmedVerifyTransaction".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2003UnconfirmedVerifyTransaction>(){}.getType();
    }
    
    if ("InlineResponse2004".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2004>(){}.getType();
    }
    
    if ("InlineResponse2005".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2005>(){}.getType();
    }
    
    if ("InlineResponse2006".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2006>(){}.getType();
    }
    
    if ("InlineResponse2007".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2007>(){}.getType();
    }
    
    if ("InlineResponse2007Data".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2007Data>(){}.getType();
    }
    
    if ("InlineResponseDefault".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponseDefault>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
